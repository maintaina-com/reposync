---
name: Rebase Maintaina Fork onto Horde upstream
on:
  # the workflow runs every Tuesday at 00:00 UTC
  schedule:
    - cron: '0 0 * * 2'
  # the workflow can also be triggered manually
  workflow_dispatch:

jobs:
  reposync:

    runs-on: ubuntu-latest
    # do not fail everything if one jobs fails
    continue-on-error: true

    strategy:
      # do not fail everything if one jobs fails
      fail-fast: false
      # use the matrix to run jobs for all packages
      matrix:
        package: [
          ActiveSync,
          agora,
          Alarm,
          ansel,
          Argv,
          Auth,
          Autoloader_Cache,
          Autoloader,
          Backup,
          base,
          beatnik,
          Browser,
          Cache,
          chora,
          Cli_Application,
          Cli,
          Cli_Modular,
          Compress_Fast,
          Compress,
          Constraint,
          # content,
          # Controller,
          Crypt_Blowfish,
          Crypt,
          CssMinify,
          Css_Parser,
          Data,
          Date,
          Date_Parser,
          # Dav,
          Db,
          Editor,
          ElasticSearch,
          Exception,
          Feed,
          folks,
          Form,
          gollem,
          Group,
          HashTable,
          hermes,
          History,
          Http,
          hylax,
          Icalendar,
          Idna,
          Image,
          Imap_Client,
          imp,
          Imsp,
          ingo,
          Injector,
          Itip,
          JavascriptMinify,
          JavascriptMinify_Jsmin,
          jonah,
          klutz,
          Kolab_Cli,
          Kolab_Config,
          Kolab_Filter,
          Kolab_Format,
          Kolab_FreeBusy,
          Kolab_Resource,
          Kolab_Server,
          Kolab_Session,
          Kolab_Storage,
          koward,
          kronolith,
          Ldap,
          Lens,
          ListHeaders,
          Lock,
          Log,
          LoginTasks,
          luxor,
          Mail_Autoconfig,
          Mail,
          ManageSieve,
          Mapi,
          Memcache,
          Mime,
          Mime_Viewer,
          mnemo,
          Mongo,
          nag,
          Nls,
          Notification,
          Oauth,
          OpenXchange,
          operator,
          Pack,
          passwd,
          pastie,
          Pdf,
          Pear,
          Perms,
          Pgp,
          Prefs,
          PubSub,
          Push,
          Queue,
          Rampage,
          Rdo,
          Refactor,
          Reflection,
          Release,
          Role,
          Routes,
          Rpc,
          sam,
          Scheduler,
          Scribe,
          Secret,
          Serialize,
          Service_Facebook,
          Service_Gravatar,
          Service_Scribd,
          Service_Twitter,
          Service_UrlShortener,
          Service_Vimeo,
          Service_Weather,
          sesha,
          SessionHandler,
          Share,
          shout,
          skeleton,
          Smtp,
          Socket_Client,
          Spam,
          SpellChecker,
          Stream_Filter,
          Stream,
          Stream_Wrapper,
          Stringprep,
          Support,
          SyncMl,
          Template,
          # Test,
          Text_Diff,
          Text_Filter,
          Text_Filter_Jsmin,
          Text_Flowed,
          Text_Textile,
          Thrift,
          timeobjects,
          Timezone,
          Token,
          Translation,
          trean,
          Tree,
          turba,
          ulaform,
          Url,
          Util,
          Vcs,
          Vfs,
          View,
          vilma,
          whups,
          wicked,
          Xml_Element,
          Xml_Wbxml,
          Yaml,
        ]

    steps:
      # accelerate setup of horde-components by caching all composer files
      - name: Cache composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ~/.composer
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Horde is not on Packagist, thus configure Maintaina's package repository
      - name: Configure Maintaina Horde Satis
        run: |
          composer global config repositories.horde composer 'https://horde-satis.maintaina.com'
          composer global config repositories.hordecontroller vcs 'https://github.com/maintaina-com/Controller.git'
          composer global config minimum-stability 'dev'

      - name: Install package for horde-components
        run: |
          COMPOSER_AUTH='{"github-oauth": {"github.com": "${{ secrets.GITHUB_TOKEN }}"}}' composer global require horde/components

      - name: Configure horde-components
        run: echo "${{ secrets.HORDE_COMPONENTS_CONFIG }}" | base64 -d > ~/.composer/web/components/config/conf.php
      
      - name: Configure git user
        run: |
          git config --local user.name "maintaina-com-svc"
          git config --local user.email "maintaina-com-svc@users.noreply.github.com"

      - name: Checkout horde-upstream
        uses: actions/checkout@v2
        with:
          repository: maintaina-com/${{ matrix.package }}
          token: ${{ secrets.REPO_PAT }}
          fetch-depth: 0
          ref: horde-upstream

      - name: Add and fetch upstream repository
        run: |
          git remote add upstream "https://github.com/horde/${{ matrix.package }}"
          git fetch upstream master

      - name: Update maintaina's upstream tracking branch
        run: |
          git checkout horde-upstream
          git rebase upstream/master

      - name: Push maintaina's branch horde-upstream
        run: git push origin horde-upstream

      - name: Drop upstream remote
        run: |
          git remote remove upstream

      - name: Rebase maintaina-bare onto horde-upstream
        run: |
          git checkout maintaina-bare
          if ! git rebase horde-upstream; then
              echo "Rebasing horde-upstream onto maintaina-bare failed."
              exit 1
          fi

      - name: Push maintaina-bare
        run: git push --force origin maintaina-bare

      - name: Recreate maintaina-composerfixed and regenerate composer.json
        run: |
          # recreate maintaina-composerfixed from maintaina-bare
          git checkout -b maintaina-composerfixed maintaina-bare
          # regenerate composer.json
          ~/.composer/vendor/bin/horde-components composer
          # commit the newly generated composer.json
          git add composer.json
          git commit -m "Regenerate composer.json"

      - name: Push maintaina-composerfixed
        run: git push --force origin maintaina-composerfixed

      - name: Rebase maintaina's master branch onto maintaina-composerfixed
        run: |
          git checkout master
          if ! git rebase -Xours maintaina-composerfixed; then
              echo "Rebasing master onto maintaina-composerfixed failed."
              exit 1
          fi

      - name: Push maintaina's master branch
        run: git push --force origin master
